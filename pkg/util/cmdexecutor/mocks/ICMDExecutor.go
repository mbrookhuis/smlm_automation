// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ICMDExecutor is an autogenerated mock type for the ICMDExecutor type
type ICMDExecutor struct {
	mock.Mock
}

// CreateDirectory provides a mock function with given fields: path
func (_m *ICMDExecutor) CreateDirectory(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for CreateDirectory")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExecuteCommand provides a mock function with given fields: binaryName, args
func (_m *ICMDExecutor) ExecuteCommand(binaryName string, args []string) ([]string, error) {
	ret := _m.Called(binaryName, args)

	if len(ret) == 0 {
		panic("no return value specified for ExecuteCommand")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, []string) ([]string, error)); ok {
		return rf(binaryName, args)
	}
	if rf, ok := ret.Get(0).(func(string, []string) []string); ok {
		r0 = rf(binaryName, args)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(string, []string) error); ok {
		r1 = rf(binaryName, args)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewICMDExecutor creates a new instance of ICMDExecutor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICMDExecutor(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICMDExecutor {
	mock := &ICMDExecutor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
